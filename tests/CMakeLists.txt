cmake_minimum_required(VERSION 3.10)

include(CTest)

project(AlgebraComputeTests)
add_executable(AlgebraComputeTests algebra/core/compute.cpp)
target_link_libraries(AlgebraComputeTests karu)
add_test(NAME AlgebraComputeTests COMMAND AlgebraComputeTests)

project(AlgebraMatrixDataTests)
add_executable(AlgebraMatrixDataTests algebra/matrix/MatrixData.cpp)
target_link_libraries(AlgebraMatrixDataTests karu)
add_test(NAME AlgebraMatrixDataTests COMMAND AlgebraMatrixDataTests)

project(AlgebraMatrixMultiplayerTests)
add_executable(AlgebraMatrixMultiplayerTests algebra/matrix/MatrixMultiplayer.cpp)
target_link_libraries(AlgebraMatrixMultiplayerTests karu)
add_test(NAME AlgebraMatrixMultiplayerTests COMMAND AlgebraMatrixMultiplayerTests)

project(AlgebraBlockSparseMatrixDataTests)
add_executable(AlgebraBlockSparseMatrixDataTests algebra/matrix/BlockSparseMatrixData.cpp)
target_link_libraries(AlgebraBlockSparseMatrixDataTests karu)
add_test(NAME AlgebraBlockSparseMatrixDataTests COMMAND AlgebraBlockSparseMatrixDataTests)

project(AlgebraBlockSparseMatrixMultiplayerTests)
add_executable(AlgebraBlockSparseMatrixMultiplayerTests algebra/matrix/BlockSparseMatrixMultiplayer.cpp)
target_link_libraries(AlgebraBlockSparseMatrixMultiplayerTests karu)
add_test(NAME AlgebraBlockSparseMatrixMultiplayerTests COMMAND AlgebraBlockSparseMatrixMultiplayerTests)

project(SiftTests)
add_executable(SiftTests sift/sift.cpp)
target_link_libraries(SiftTests karu)
add_test(NAME SiftTests COMMAND SiftTests)

